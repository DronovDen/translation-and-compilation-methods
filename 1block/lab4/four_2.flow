import runtime;
import ds/tree;
import string;

inds(array : [int], m : int) -> [Pair<int, int>] {
    tree  = foldi(array, makeTree(), \i, s, n_i -> {
        switch (lookupTree(s, n_i)) {
            Some(v):  setTree(s, n_i, concat(v, [i]));
            None(): setTree(s, n_i, [i]);
        }
    }
    );

    foldi(array, [], \i, s, n_i -> {
        switch (lookupTree(tree, m - n_i)) {
            Some(v): concat(s, map(v, \j -> Pair(i, j)));
            None(): s;
        }
    }
    )
}

main (){
    m : int = 14;
    array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 13];
    result = inds(array, m);
    /* str_arr : [string] = map(result, \i -> "(" + i2s(i.first) + " " + i2s(i.second) + ")");
    str : string = strGlue(str_arr, ","); */
    //println(str);
    println(inds(array, m));
    quit(0);
}